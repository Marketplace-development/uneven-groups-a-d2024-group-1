"""create user table

Revision ID: 01b43054247a
Revises: 
Create Date: 2024-11-14 23:31:15.616547

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '01b43054247a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('student_id', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('student_id'),
    sa.UniqueConstraint('username')
    )
    op.drop_table('Student')
    op.drop_table('Owner')
    op.drop_table('Locations')
    op.drop_table('Transaction')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Transaction',
    sa.Column('TransactionID', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('Status', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('TransactionID', name='Transaction_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Locations',
    sa.Column('ID', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('Name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('OwnerID', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('Phonenumber', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Number chairs', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('TransactionID', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['TransactionID'], ['Transaction.TransactionID'], name='Locations_TransactionID_fkey', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('ID', name='Locations_pkey'),
    sa.UniqueConstraint('ID', name='Locations_ID_key'),
    sa.UniqueConstraint('Name', name='Locations_Name_key'),
    sa.UniqueConstraint('OwnerID', name='Locations_OwnerID_key'),
    comment='Information about the locations',
    postgresql_ignore_search_path=False
    )
    op.create_table('Owner',
    sa.Column('OwnerID', sa.SMALLINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=32767, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('Phone number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Owners name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Birthdate', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('Email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Country', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('City', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Postal code', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Streetname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Housenumber', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Bus', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['OwnerID'], ['Locations.OwnerID'], name='Owner_OwnerID_fkey', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('OwnerID', name='Owner_pkey'),
    comment="Owner's info"
    )
    op.create_table('Student',
    sa.Column('Username', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('Student ID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Student email', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('authID', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('TransactionID', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['TransactionID'], ['Transaction.TransactionID'], name='student_transactionid_fkey', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('Student ID', name='Student_pkey'),
    sa.UniqueConstraint('Student ID', name='Student_Student ID_key'),
    sa.UniqueConstraint('Student email', name='Student_Student email_key'),
    sa.UniqueConstraint('Username', name='Student_Username_key'),
    comment='Info about the student'
    )
    op.drop_table('user')
    # ### end Alembic commands ###
